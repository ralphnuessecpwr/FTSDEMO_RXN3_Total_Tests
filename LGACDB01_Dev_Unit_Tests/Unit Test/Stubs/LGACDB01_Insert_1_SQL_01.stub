<?xml version="1.0" encoding="UTF-8"?>
<stub:stub xmlns:checkconditions="http://www.compuware.com/model/xml/checkconditions" xmlns:listructure="http://www.compuware.com/model/xml/listructure" xmlns:properties="http://www.compuware.com/model/xml/properties" xmlns:stub="http://www.compuware.com/model/xml/stub" alias="" disposition="SHR" encoding="1047" id="Unit%20Test/Stubs/LGACDB01_Insert_1_SQL_01.stub" nextCalltoken="20002" stubtype="SQL" target="Insert" token="20000">
  <stub:description>Created: 21.02.2019 08:01:34</stub:description>
  <stub:stubdata id="0" name="Insert">
    <stub:interface>../Interfaces/LGACDB01_Insert_1_CA_POSTCODE.interface#Unit%20Test/Interfaces/LGACDB01_Insert_1_CA_POSTCODE.interface</stub:interface>
    <stub:output listructure="../Structures/Db2/LGACDB01/LGACDB01_Insert_DB2-CUSTOMERNUM-INT.listructure#Unit%20Test/Structures/Db2/LGACDB01/LGACDB01_Insert_DB2-CUSTOMERNUM-INT.listructure">
      <stub:data baseType="listructure:structType ../Structures/Db2/LGACDB01/LGACDB01_Insert_DB2-CUSTOMERNUM-INT.listructure#DB2_CUSTOMERNUM_INT" id="arg0.DB2_CUSTOMERNUM_INT">
        <properties:properties>
          <properties:property name="value" type="string">00000015</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:numberType ../Structures/Db2/LGACDB01/LGACDB01_Insert_DB2-CUSTOMERNUM-INT.listructure#DB2_CUSTOMERNUM_INT.DB2_CUSTOMERNUM_INT" id="output0.arg0.DB2_CUSTOMERNUM_INT.DB2_CUSTOMERNUM_INT" offset="0"/>
    </stub:output>
    <stub:output listructure="../Structures/Db2/LGACDB01/LGACDB01_Insert_CA-FIRST-NAME.listructure#Unit%20Test/Structures/Db2/LGACDB01/LGACDB01_Insert_CA-FIRST-NAME.listructure">
      <stub:data baseType="listructure:structType ../Structures/Db2/LGACDB01/LGACDB01_Insert_CA-FIRST-NAME.listructure#CA_FIRST_NAME" id="arg1.CA_FIRST_NAME">
        <properties:properties>
          <properties:property name="value" type="string">D9C1D3D7C84040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/Db2/LGACDB01/LGACDB01_Insert_CA-FIRST-NAME.listructure#CA_FIRST_NAME.CA_FIRST_NAME" id="output0.arg1.CA_FIRST_NAME.CA_FIRST_NAME" offset="0"/>
    </stub:output>
    <stub:output listructure="../Structures/Db2/LGACDB01/LGACDB01_Insert_CA-LAST-NAME.listructure#Unit%20Test/Structures/Db2/LGACDB01/LGACDB01_Insert_CA-LAST-NAME.listructure">
      <stub:data baseType="listructure:structType ../Structures/Db2/LGACDB01/LGACDB01_Insert_CA-LAST-NAME.listructure#CA_LAST_NAME" id="arg2.CA_LAST_NAME">
        <properties:properties>
          <properties:property name="value" type="string">D5E4C5E2E2C54040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/Db2/LGACDB01/LGACDB01_Insert_CA-LAST-NAME.listructure#CA_LAST_NAME.CA_LAST_NAME" id="output0.arg2.CA_LAST_NAME.CA_LAST_NAME" offset="0"/>
    </stub:output>
    <stub:output listructure="../Structures/Db2/LGACDB01/LGACDB01_Insert_CA-DOB.listructure#Unit%20Test/Structures/Db2/LGACDB01/LGACDB01_Insert_CA-DOB.listructure">
      <stub:data baseType="listructure:structType ../Structures/Db2/LGACDB01/LGACDB01_Insert_CA-DOB.listructure#CA_DOB" id="arg3.CA_DOB">
        <properties:properties>
          <properties:property name="value" type="string">F1F9F7F060F0F160F0F2</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/Db2/LGACDB01/LGACDB01_Insert_CA-DOB.listructure#CA_DOB.CA_DOB" id="output0.arg3.CA_DOB.CA_DOB" offset="0"/>
    </stub:output>
    <stub:output listructure="../Structures/Db2/LGACDB01/LGACDB01_Insert_CA-HOUSE-NAME.listructure#Unit%20Test/Structures/Db2/LGACDB01/LGACDB01_Insert_CA-HOUSE-NAME.listructure">
      <stub:data baseType="listructure:structType ../Structures/Db2/LGACDB01/LGACDB01_Insert_CA-HOUSE-NAME.listructure#CA_HOUSE_NAME" id="arg4.CA_HOUSE_NAME">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/Db2/LGACDB01/LGACDB01_Insert_CA-HOUSE-NAME.listructure#CA_HOUSE_NAME.CA_HOUSE_NAME" id="output0.arg4.CA_HOUSE_NAME.CA_HOUSE_NAME" offset="0"/>
    </stub:output>
    <stub:output listructure="../Structures/Db2/LGACDB01/LGACDB01_Insert_CA-HOUSE-NUM.listructure#Unit%20Test/Structures/Db2/LGACDB01/LGACDB01_Insert_CA-HOUSE-NUM.listructure">
      <stub:data baseType="listructure:structType ../Structures/Db2/LGACDB01/LGACDB01_Insert_CA-HOUSE-NUM.listructure#CA_HOUSE_NUM" id="arg5.CA_HOUSE_NUM">
        <properties:properties>
          <properties:property name="value" type="string">F3F44040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/Db2/LGACDB01/LGACDB01_Insert_CA-HOUSE-NUM.listructure#CA_HOUSE_NUM.CA_HOUSE_NUM" id="output0.arg5.CA_HOUSE_NUM.CA_HOUSE_NUM" offset="0"/>
    </stub:output>
    <stub:output listructure="../Structures/Db2/LGACDB01/LGACDB01_Insert_CA-POSTCODE.listructure#Unit%20Test/Structures/Db2/LGACDB01/LGACDB01_Insert_CA-POSTCODE.listructure">
      <stub:data baseType="listructure:structType ../Structures/Db2/LGACDB01/LGACDB01_Insert_CA-POSTCODE.listructure#CA_POSTCODE" id="arg6.CA_POSTCODE">
        <properties:properties>
          <properties:property name="value" type="string">F4F4F2F6F9404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/Db2/LGACDB01/LGACDB01_Insert_CA-POSTCODE.listructure#CA_POSTCODE.CA_POSTCODE" id="output0.arg6.CA_POSTCODE.CA_POSTCODE" offset="0"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output0.arg0.DB2_CUSTOMERNUM_INT.DB2_CUSTOMERNUM_INT">
        <checkconditions:expression>BigDecimalCreator.make('21').compareTo(result.arg0.DB2_CUSTOMERNUM_INT.DB2_CUSTOMERNUM_INT) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">21</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output0.arg1.CA_FIRST_NAME.CA_FIRST_NAME">
        <checkconditions:expression>'RALPH' eq result.arg1.CA_FIRST_NAME.CA_FIRST_NAME</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">RALPH</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output0.arg2.CA_LAST_NAME.CA_LAST_NAME">
        <checkconditions:expression>'NUESSE' eq result.arg2.CA_LAST_NAME.CA_LAST_NAME</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">NUESSE</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output0.arg3.CA_DOB.CA_DOB">
        <checkconditions:expression>'1970-01-02' eq result.arg3.CA_DOB.CA_DOB</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">1970-01-02</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output0.arg4.CA_HOUSE_NAME.CA_HOUSE_NAME">
        <checkconditions:expression>'' eq result.arg4.CA_HOUSE_NAME.CA_HOUSE_NAME</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output0.arg5.CA_HOUSE_NUM.CA_HOUSE_NUM">
        <checkconditions:expression>'34' eq result.arg5.CA_HOUSE_NUM.CA_HOUSE_NUM</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">34</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output0.arg6.CA_POSTCODE.CA_POSTCODE">
        <checkconditions:expression>'44269' eq result.arg6.CA_POSTCODE.CA_POSTCODE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">44269</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
    <stub:sqlStatus>
      <stub:statement type="Insert">
        <stub:text>      *****EXEC SQL
      *****  INSERT INTO CUSTOMER
      *****            ( CUSTOMERNUMBER,
      *****              FIRSTNAME,
      *****              LASTNAME,
      *****              DATEOFBIRTH,
      *****              HOUSENAME,
      *****              HOUSENUMBER,
      *****              POSTCODE       )
      *****     VALUES ( :DB2-CUSTOMERNUM-INT,
      *****              :CA-FIRST-NAME,
      *****              :CA-LAST-NAME,
      *****              :CA-DOB,
      *****              :CA-HOUSE-NAME,
      *****              :CA-HOUSE-NUM,
      *****              :CA-POSTCODE   )
      *****END-EXEC
</stub:text>
      </stub:statement>
      <stub:plist>
        <stub:headerData>00404000001E4C474143444230311AAC15A405D6BB580002400BE140400BE3680000000004B800E80000016D0000000000000000000000000000000000000000</stub:headerData>
        <stub:varRawDatastub:varRawData>
      </stub:plist>
      <stub:sqlca callToken="20001">
        <stub:rawData>E2D8D3C3C14040400000008800000000000040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040C4E2D54040404040000000000000000000000001FFFFFFFF00000000000000004040404040404040404040F0F0F0F0F0</stub:rawData>
      </stub:sqlca>
    </stub:sqlStatus>
  </stub:stubdata>
  <stub:database version="1110"/>
</stub:stub>