<?xml version="1.1" encoding="UTF-8"?>
<?totaltestVersion 20.2.2.v20200429-0333_140?>
<!--Topaz for Total Test 20.2.2.v20200429-0333_140 May 22, 2020 2:38:44 PM-->
<archive:archive xmlns:archive="http://www.compuware.com/model/xml/archive" xmlns:checkconditions="http://www.compuware.com/model/xml/checkconditions" xmlns:interface="http://www.compuware.com/model/xml/interface" xmlns:listructure="http://www.compuware.com/model/xml/listructure" xmlns:properties="http://www.compuware.com/model/xml/properties" xmlns:testcase="http://www.compuware.com/model/xml/testcase" xmlns:testscenario="http://www.compuware.com/model/xml/testscenario" xmlns:testsuite="http://www.compuware.com/model/xml/testsuite"><listructure:listructure id="Unit%20Test/Structures/CWXTCOB_EMP-TYPE.listructure"><listructure:struct id="EMP_TYPE" name="EMP_TYPE"><properties:properties><properties:property name="displayLength" type="number">1</properties:property><properties:property name="platform" type="string">mainframe</properties:property><properties:property name="storageLength" type="number">1</properties:property></properties:properties><listructure:string id="EMP_TYPE" length="1" name="EMP_TYPE"><properties:properties><properties:property name="picture" type="string">X</properties:property><properties:property name="displayLength" type="number">1</properties:property><properties:property name="platform" type="string">mainframe</properties:property><properties:property name="liType" type="string">char</properties:property><properties:property name="mask" type="string">X</properties:property><properties:property name="storageLength" type="number">1</properties:property></properties:properties></listructure:string></listructure:struct></listructure:listructure><listructure:listructure id="Unit%20Test/Structures/CWXTCOB_SALES-AMOUNT.listructure"><listructure:struct id="SALES_AMOUNT" name="SALES_AMOUNT"><properties:properties><properties:property name="displayLength" type="number">8</properties:property><properties:property name="platform" type="string">mainframe</properties:property><properties:property name="storageLength" type="number">8</properties:property></properties:properties><listructure:number id="SALES_AMOUNT" length="8" name="SALES_AMOUNT"><properties:properties><properties:property name="picture" type="string">9(6)V99</properties:property><properties:property name="scale" type="number">2</properties:property><properties:property name="displayLength" type="number">8</properties:property><properties:property name="integerDigits" type="number">6</properties:property><properties:property name="platform" type="string">mainframe</properties:property><properties:property name="liType" type="string">zoned</properties:property><properties:property name="mask" type="string">9(6)V99</properties:property><properties:property name="storageLength" type="number">8</properties:property></properties:properties></listructure:number></listructure:struct></listructure:listructure><listructure:listructure id="Unit%20Test/Structures/CWXTCOB_COMM-TOTAL.listructure"><listructure:struct id="COMM_TOTAL" name="COMM_TOTAL"><properties:properties><properties:property name="displayLength" type="number">4</properties:property><properties:property name="platform" type="string">mainframe</properties:property><properties:property name="storageLength" type="number">4</properties:property></properties:properties><listructure:number id="COMM_TOTAL" length="7" name="COMM_TOTAL"><properties:properties><properties:property name="picture" type="string">9(5)V99</properties:property><properties:property name="usage" type="string">computational-3</properties:property><properties:property name="scale" type="number">2</properties:property><properties:property name="displayLength" type="number">7</properties:property><properties:property name="integerDigits" type="number">5</properties:property><properties:property name="platform" type="string">mainframe</properties:property><properties:property name="liType" type="string">packed</properties:property><properties:property name="storageLength" type="number">4</properties:property></properties:properties></listructure:number></listructure:struct></listructure:listructure><interface:interface alias="" id="Unit%20Test/Interfaces/CWXTSUBC.interface"><interface:description></interface:description><interface:argument listructure="#Unit%20Test/Structures/CWXTCOB_EMP-TYPE.listructure"><interface:baseTypeExtension baseType="#EMP_TYPE"><properties:properties><properties:property name="usage" type="string">inout</properties:property></properties:properties></interface:baseTypeExtension></interface:argument><interface:argument listructure="#Unit%20Test/Structures/CWXTCOB_SALES-AMOUNT.listructure"><interface:baseTypeExtension baseType="#SALES_AMOUNT"><properties:properties><properties:property name="usage" type="string">inout</properties:property></properties:properties></interface:baseTypeExtension></interface:argument><interface:argument listructure="#Unit%20Test/Structures/CWXTCOB_COMM-TOTAL.listructure"><interface:baseTypeExtension baseType="#COMM_TOTAL"><properties:properties><properties:property name="usage" type="string">inout</properties:property></properties:properties></interface:baseTypeExtension></interface:argument></interface:interface><testscenario:testscenario alias="" id="Unit%20Test/Scenarios/CWXTSUBC_Sales_Scenario.testscenario"><testscenario:description></testscenario:description><testscenario:testcases><testscenario:testcase alias="" csect="CWXTSUBC" encoding="1047" entrypoint="CWXTSUBC" id="Unit%20Test/Scenarios/CWXTSUBC_Sales_Scenario.testscenario%23CWXTSUBCCase1" target="CWXTCOB"><testcase:description></testcase:description><testcase:ddio></testcase:ddio><testcase:ddiotype>DDIO</testcase:ddiotype><testcase:targetCaptureCompileTime>1552458571000</testcase:targetCaptureCompileTime><testcase:interface>#Unit%20Test/Interfaces/CWXTSUBC.interface</testcase:interface><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE" id="arg0.EMP_TYPE"><properties:properties><properties:property name="value" type="string">E2</properties:property><properties:property name="expectedValue" type="string">E2</properties:property></properties:properties></testcase:data><testcase:data baseType="#EMP_TYPE" id="input.arg0.EMP_TYPE.EMP_TYPE" offset="0"/></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT" id="arg1.SALES_AMOUNT"><properties:properties><properties:property name="value" type="string">F0F5F5F0F0F0F0F0</properties:property><properties:property name="expectedValue" type="string">F0F5F5F0F0F0F0F0</properties:property></properties:properties></testcase:data><testcase:data baseType="#SALES_AMOUNT" id="input.arg1.SALES_AMOUNT.SALES_AMOUNT" offset="0"/></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL" id="arg2.COMM_TOTAL"><properties:properties><properties:property name="value" type="string">0000000F</properties:property><properties:property name="expectedValue" type="string">0330000F</properties:property></properties:properties></testcase:data><testcase:data baseType="#COMM_TOTAL" id="input.arg2.COMM_TOTAL.COMM_TOTAL" offset="0"/></testcase:input><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_EMP-TYPE.listructure"/><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_SALES-AMOUNT.listructure"/><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_COMM-TOTAL.listructure"/><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_EMP-TYPE.listructure"/><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_SALES-AMOUNT.listructure"/><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_COMM-TOTAL.listructure"/><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_EMP-TYPE.listructure"/><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_SALES-AMOUNT.listructure"/><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_COMM-TOTAL.listructure"/><testcase:checkconditions><checkconditions:complexCheckcondition message="Complex check condition failed" name="Complex check condition"/><checkconditions:simpleCheckcondition message="Check for EMP_TYPE failed" name="Check for EMP_TYPE" refData="#input.arg0.EMP_TYPE.EMP_TYPE"><checkconditions:expression>'S' eq output.arg0.EMP_TYPE.EMP_TYPE</checkconditions:expression><checkconditions:expectation assert="=" type="string">S</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for SALES_AMOUNT failed" name="Check for SALES_AMOUNT" refData="#input.arg1.SALES_AMOUNT.SALES_AMOUNT"><checkconditions:expression>BigDecimalCreator.make('55000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">55000.00</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for COMM_TOTAL failed" name="Check for COMM_TOTAL" refData="#input.arg2.COMM_TOTAL.COMM_TOTAL"><checkconditions:expression>BigDecimalCreator.make('3300.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">3300.00</checkconditions:expectation></checkconditions:simpleCheckcondition></testcase:checkconditions><testcase:stubs/></testscenario:testcase><testscenario:testcase alias="" csect="CWXTSUBC" encoding="1047" entrypoint="CWXTSUBC" id="Unit%20Test/Scenarios/CWXTSUBC_Sales_Scenario.testscenario%23CWXTSUBCCase2" target="CWXTCOB"><testcase:description></testcase:description><testcase:ddio></testcase:ddio><testcase:ddiotype>DDIO</testcase:ddiotype><testcase:targetCaptureCompileTime>1552458571000</testcase:targetCaptureCompileTime><testcase:interface>#Unit%20Test/Interfaces/CWXTSUBC.interface</testcase:interface><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE" id="arg0.EMP_TYPE"><properties:properties><properties:property name="value" type="string">E2</properties:property><properties:property name="expectedValue" type="string">E2</properties:property></properties:properties></testcase:data><testcase:data baseType="#EMP_TYPE" id="input.arg0.EMP_TYPE.EMP_TYPE" offset="0"/></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT" id="arg1.SALES_AMOUNT"><properties:properties><properties:property name="value" type="string">F0F2F5F0F0F0F0F0</properties:property><properties:property name="expectedValue" type="string">F0F2F5F0F0F0F0F0</properties:property></properties:properties></testcase:data><testcase:data baseType="#SALES_AMOUNT" id="input.arg1.SALES_AMOUNT.SALES_AMOUNT" offset="0"/></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL" id="arg2.COMM_TOTAL"><properties:properties><properties:property name="value" type="string">0000000F</properties:property><properties:property name="expectedValue" type="string">0100000F</properties:property></properties:properties></testcase:data><testcase:data baseType="#COMM_TOTAL" id="input.arg2.COMM_TOTAL.COMM_TOTAL" offset="0"/></testcase:input><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_EMP-TYPE.listructure"/><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_SALES-AMOUNT.listructure"/><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_COMM-TOTAL.listructure"/><testcase:checkconditions><checkconditions:complexCheckcondition message="Complex check condition failed" name="Complex check condition"/><checkconditions:simpleCheckcondition message="Check for EMP_TYPE failed" name="Check for EMP_TYPE" refData="#input.arg0.EMP_TYPE.EMP_TYPE"><checkconditions:expression>'S' eq output.arg0.EMP_TYPE.EMP_TYPE</checkconditions:expression><checkconditions:expectation assert="=" type="string">S</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for SALES_AMOUNT failed" name="Check for SALES_AMOUNT" refData="#input.arg1.SALES_AMOUNT.SALES_AMOUNT"><checkconditions:expression>BigDecimalCreator.make('25000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">25000.00</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for COMM_TOTAL failed" name="Check for COMM_TOTAL" refData="#input.arg2.COMM_TOTAL.COMM_TOTAL"><checkconditions:expression>BigDecimalCreator.make('1000.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">1000.00</checkconditions:expectation></checkconditions:simpleCheckcondition></testcase:checkconditions><testcase:stubs/></testscenario:testcase><testscenario:testcase alias="" csect="CWXTSUBC" encoding="1047" entrypoint="CWXTSUBC" id="Unit%20Test/Scenarios/CWXTSUBC_Sales_Scenario.testscenario%23CWXTSUBCCase3" target="CWXTCOB"><testcase:description></testcase:description><testcase:ddio></testcase:ddio><testcase:ddiotype>DDIO</testcase:ddiotype><testcase:targetCaptureCompileTime>1552458571000</testcase:targetCaptureCompileTime><testcase:interface>#Unit%20Test/Interfaces/CWXTSUBC.interface</testcase:interface><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE" id="arg0.EMP_TYPE"><properties:properties><properties:property name="value" type="string">E2</properties:property><properties:property name="expectedValue" type="string">E2</properties:property></properties:properties></testcase:data><testcase:data baseType="#EMP_TYPE" id="input.arg0.EMP_TYPE.EMP_TYPE" offset="0"/></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT" id="arg1.SALES_AMOUNT"><properties:properties><properties:property name="value" type="string">F0F7F5F0F0F0F0F0</properties:property><properties:property name="expectedValue" type="string">F0F7F5F0F0F0F0F0</properties:property></properties:properties></testcase:data><testcase:data baseType="#SALES_AMOUNT" id="input.arg1.SALES_AMOUNT.SALES_AMOUNT" offset="0"/></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL" id="arg2.COMM_TOTAL"><properties:properties><properties:property name="value" type="string">0000000F</properties:property><properties:property name="expectedValue" type="string">0600000F</properties:property></properties:properties></testcase:data><testcase:data baseType="#COMM_TOTAL" id="input.arg2.COMM_TOTAL.COMM_TOTAL" offset="0"/></testcase:input><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_EMP-TYPE.listructure"/><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_SALES-AMOUNT.listructure"/><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_COMM-TOTAL.listructure"/><testcase:checkconditions><checkconditions:complexCheckcondition message="Complex check condition failed" name="Complex check condition"/><checkconditions:simpleCheckcondition message="Check for EMP_TYPE failed" name="Check for EMP_TYPE" refData="#input.arg0.EMP_TYPE.EMP_TYPE"><checkconditions:expression>'S' eq output.arg0.EMP_TYPE.EMP_TYPE</checkconditions:expression><checkconditions:expectation assert="=" type="string">S</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for SALES_AMOUNT failed" name="Check for SALES_AMOUNT" refData="#input.arg1.SALES_AMOUNT.SALES_AMOUNT"><checkconditions:expression>BigDecimalCreator.make('75000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">75000.00</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for COMM_TOTAL failed" name="Check for COMM_TOTAL" refData="#input.arg2.COMM_TOTAL.COMM_TOTAL"><checkconditions:expression>BigDecimalCreator.make('6000.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">6000.00</checkconditions:expectation></checkconditions:simpleCheckcondition></testcase:checkconditions><testcase:stubs/></testscenario:testcase><testscenario:testcase alias="" csect="CWXTSUBC" encoding="1047" entrypoint="CWXTSUBC" id="Unit%20Test/Scenarios/CWXTSUBC_Sales_Scenario.testscenario%23CWXTSUBCCase4" target="CWXTCOB"><testcase:description></testcase:description><testcase:ddio></testcase:ddio><testcase:ddiotype>DDIO</testcase:ddiotype><testcase:targetCaptureCompileTime>1552458571000</testcase:targetCaptureCompileTime><testcase:interface>#Unit%20Test/Interfaces/CWXTSUBC.interface</testcase:interface><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE" id="arg0.EMP_TYPE"><properties:properties><properties:property name="value" type="string">E2</properties:property><properties:property name="expectedValue" type="string">E2</properties:property></properties:properties></testcase:data><testcase:data baseType="#EMP_TYPE" id="input.arg0.EMP_TYPE.EMP_TYPE" offset="0"/></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT" id="arg1.SALES_AMOUNT"><properties:properties><properties:property name="value" type="string">F0F5F5F5F5F0F0F0</properties:property><properties:property name="expectedValue" type="string">F0F5F5F5F5F0F0F0</properties:property></properties:properties></testcase:data><testcase:data baseType="#SALES_AMOUNT" id="input.arg1.SALES_AMOUNT.SALES_AMOUNT" offset="0"/></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL" id="arg2.COMM_TOTAL"><properties:properties><properties:property name="value" type="string">0000000F</properties:property><properties:property name="expectedValue" type="string">0333300F</properties:property></properties:properties></testcase:data><testcase:data baseType="#COMM_TOTAL" id="input.arg2.COMM_TOTAL.COMM_TOTAL" offset="0"/></testcase:input><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_EMP-TYPE.listructure"/><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_SALES-AMOUNT.listructure"/><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_COMM-TOTAL.listructure"/><testcase:checkconditions><checkconditions:complexCheckcondition message="Complex check condition failed" name="Complex check condition"/><checkconditions:simpleCheckcondition message="Check for EMP_TYPE failed" name="Check for EMP_TYPE" refData="#input.arg0.EMP_TYPE.EMP_TYPE"><checkconditions:expression>'S' eq output.arg0.EMP_TYPE.EMP_TYPE</checkconditions:expression><checkconditions:expectation assert="=" type="string">S</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for SALES_AMOUNT failed" name="Check for SALES_AMOUNT" refData="#input.arg1.SALES_AMOUNT.SALES_AMOUNT"><checkconditions:expression>BigDecimalCreator.make('55550.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">55550.00</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for COMM_TOTAL failed" name="Check for COMM_TOTAL" refData="#input.arg2.COMM_TOTAL.COMM_TOTAL"><checkconditions:expression>BigDecimalCreator.make('3333.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">3333.00</checkconditions:expectation></checkconditions:simpleCheckcondition></testcase:checkconditions><testcase:stubs/></testscenario:testcase><testscenario:testcase alias="" csect="CWXTSUBC" encoding="1047" entrypoint="CWXTSUBC" id="Unit%20Test/Scenarios/CWXTSUBC_Sales_Scenario.testscenario%23CWXTSUBCCase5" target="CWXTCOB"><testcase:description></testcase:description><testcase:ddio></testcase:ddio><testcase:ddiotype>DDIO</testcase:ddiotype><testcase:targetCaptureCompileTime>1552458571000</testcase:targetCaptureCompileTime><testcase:interface>#Unit%20Test/Interfaces/CWXTSUBC.interface</testcase:interface><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE" id="arg0.EMP_TYPE"><properties:properties><properties:property name="value" type="string">E2</properties:property><properties:property name="expectedValue" type="string">E2</properties:property></properties:properties></testcase:data><testcase:data baseType="#EMP_TYPE" id="input.arg0.EMP_TYPE.EMP_TYPE" offset="0"/></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT" id="arg1.SALES_AMOUNT"><properties:properties><properties:property name="value" type="string">F0F7F5F0F0F0F0F0</properties:property><properties:property name="expectedValue" type="string">F0F7F5F0F0F0F0F0</properties:property></properties:properties></testcase:data><testcase:data baseType="#SALES_AMOUNT" id="input.arg1.SALES_AMOUNT.SALES_AMOUNT" offset="0"/></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL" id="arg2.COMM_TOTAL"><properties:properties><properties:property name="value" type="string">0000000F</properties:property><properties:property name="expectedValue" type="string">0600000F</properties:property></properties:properties></testcase:data><testcase:data baseType="#COMM_TOTAL" id="input.arg2.COMM_TOTAL.COMM_TOTAL" offset="0"/></testcase:input><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_EMP-TYPE.listructure"/><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_SALES-AMOUNT.listructure"/><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_COMM-TOTAL.listructure"/><testcase:checkconditions><checkconditions:complexCheckcondition message="Complex check condition failed" name="Complex check condition"/><checkconditions:simpleCheckcondition message="Check for EMP_TYPE failed" name="Check for EMP_TYPE" refData="#input.arg0.EMP_TYPE.EMP_TYPE"><checkconditions:expression>'S' eq output.arg0.EMP_TYPE.EMP_TYPE</checkconditions:expression><checkconditions:expectation assert="=" type="string">S</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for SALES_AMOUNT failed" name="Check for SALES_AMOUNT" refData="#input.arg1.SALES_AMOUNT.SALES_AMOUNT"><checkconditions:expression>BigDecimalCreator.make('75000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">75000.00</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for COMM_TOTAL failed" name="Check for COMM_TOTAL" refData="#input.arg2.COMM_TOTAL.COMM_TOTAL"><checkconditions:expression>BigDecimalCreator.make('6000.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">6000.00</checkconditions:expectation></checkconditions:simpleCheckcondition></testcase:checkconditions><testcase:stubs/></testscenario:testcase><testscenario:testcase alias="" csect="CWXTSUBC" encoding="1047" entrypoint="CWXTSUBC" id="Unit%20Test/Scenarios/CWXTSUBC_Sales_Scenario.testscenario%23CWXTSUBCCase6" target="CWXTCOB"><testcase:description></testcase:description><testcase:ddio></testcase:ddio><testcase:ddiotype>DDIO</testcase:ddiotype><testcase:targetCaptureCompileTime>1552458571000</testcase:targetCaptureCompileTime><testcase:interface>#Unit%20Test/Interfaces/CWXTSUBC.interface</testcase:interface><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE" id="arg0.EMP_TYPE"><properties:properties><properties:property name="value" type="string">E2</properties:property><properties:property name="expectedValue" type="string">E2</properties:property></properties:properties></testcase:data><testcase:data baseType="#EMP_TYPE" id="input.arg0.EMP_TYPE.EMP_TYPE" offset="0"/></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT" id="arg1.SALES_AMOUNT"><properties:properties><properties:property name="value" type="string">F0F2F8F0F0F0F0F0</properties:property><properties:property name="expectedValue" type="string">F0F2F8F0F0F0F0F0</properties:property></properties:properties></testcase:data><testcase:data baseType="#SALES_AMOUNT" id="input.arg1.SALES_AMOUNT.SALES_AMOUNT" offset="0"/></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL" id="arg2.COMM_TOTAL"><properties:properties><properties:property name="value" type="string">0000000F</properties:property><properties:property name="expectedValue" type="string">0112000F</properties:property></properties:properties></testcase:data><testcase:data baseType="#COMM_TOTAL" id="input.arg2.COMM_TOTAL.COMM_TOTAL" offset="0"/></testcase:input><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_EMP-TYPE.listructure"/><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_SALES-AMOUNT.listructure"/><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_COMM-TOTAL.listructure"/><testcase:checkconditions><checkconditions:complexCheckcondition message="Complex check condition failed" name="Complex check condition"/><checkconditions:simpleCheckcondition message="Check for EMP_TYPE failed" name="Check for EMP_TYPE" refData="#input.arg0.EMP_TYPE.EMP_TYPE"><checkconditions:expression>'S' eq output.arg0.EMP_TYPE.EMP_TYPE</checkconditions:expression><checkconditions:expectation assert="=" type="string">S</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for SALES_AMOUNT failed" name="Check for SALES_AMOUNT" refData="#input.arg1.SALES_AMOUNT.SALES_AMOUNT"><checkconditions:expression>BigDecimalCreator.make('28000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">28000.00</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for COMM_TOTAL failed" name="Check for COMM_TOTAL" refData="#input.arg2.COMM_TOTAL.COMM_TOTAL"><checkconditions:expression>BigDecimalCreator.make('1120.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">1120.00</checkconditions:expectation></checkconditions:simpleCheckcondition></testcase:checkconditions><testcase:stubs/></testscenario:testcase><testscenario:testcase alias="" csect="CWXTSUBC" encoding="1047" entrypoint="CWXTSUBC" id="Unit%20Test/Scenarios/CWXTSUBC_Sales_Scenario.testscenario%23CWXTSUBCCase7" target="CWXTCOB"><testcase:description></testcase:description><testcase:ddio></testcase:ddio><testcase:ddiotype>DDIO</testcase:ddiotype><testcase:targetCaptureCompileTime>1552458571000</testcase:targetCaptureCompileTime><testcase:interface>#Unit%20Test/Interfaces/CWXTSUBC.interface</testcase:interface><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE" id="arg0.EMP_TYPE"><properties:properties><properties:property name="value" type="string">E2</properties:property><properties:property name="expectedValue" type="string">E2</properties:property></properties:properties></testcase:data><testcase:data baseType="#EMP_TYPE" id="input.arg0.EMP_TYPE.EMP_TYPE" offset="0"/></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT" id="arg1.SALES_AMOUNT"><properties:properties><properties:property name="value" type="string">F0F7F5F0F0F0F0F0</properties:property><properties:property name="expectedValue" type="string">F0F7F5F0F0F0F0F0</properties:property></properties:properties></testcase:data><testcase:data baseType="#SALES_AMOUNT" id="input.arg1.SALES_AMOUNT.SALES_AMOUNT" offset="0"/></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL" id="arg2.COMM_TOTAL"><properties:properties><properties:property name="value" type="string">0000000F</properties:property><properties:property name="expectedValue" type="string">0600000F</properties:property></properties:properties></testcase:data><testcase:data baseType="#COMM_TOTAL" id="input.arg2.COMM_TOTAL.COMM_TOTAL" offset="0"/></testcase:input><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_EMP-TYPE.listructure"/><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_SALES-AMOUNT.listructure"/><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_COMM-TOTAL.listructure"/><testcase:checkconditions><checkconditions:complexCheckcondition message="Complex check condition failed" name="Complex check condition"/><checkconditions:simpleCheckcondition message="Check for EMP_TYPE failed" name="Check for EMP_TYPE" refData="#input.arg0.EMP_TYPE.EMP_TYPE"><checkconditions:expression>'S' eq output.arg0.EMP_TYPE.EMP_TYPE</checkconditions:expression><checkconditions:expectation assert="=" type="string">S</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for SALES_AMOUNT failed" name="Check for SALES_AMOUNT" refData="#input.arg1.SALES_AMOUNT.SALES_AMOUNT"><checkconditions:expression>BigDecimalCreator.make('75000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">75000.00</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for COMM_TOTAL failed" name="Check for COMM_TOTAL" refData="#input.arg2.COMM_TOTAL.COMM_TOTAL"><checkconditions:expression>BigDecimalCreator.make('6000.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">6000.00</checkconditions:expectation></checkconditions:simpleCheckcondition></testcase:checkconditions><testcase:stubs/></testscenario:testcase><testscenario:testcase alias="" csect="CWXTSUBC" encoding="1047" entrypoint="CWXTSUBC" id="Unit%20Test/Scenarios/CWXTSUBC_Sales_Scenario.testscenario%23CWXTSUBCCase8" target="CWXTCOB"><testcase:description></testcase:description><testcase:ddio></testcase:ddio><testcase:ddiotype>DDIO</testcase:ddiotype><testcase:targetCaptureCompileTime>1552458571000</testcase:targetCaptureCompileTime><testcase:interface>#Unit%20Test/Interfaces/CWXTSUBC.interface</testcase:interface><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE" id="arg0.EMP_TYPE"><properties:properties><properties:property name="value" type="string">E2</properties:property><properties:property name="expectedValue" type="string">E2</properties:property></properties:properties></testcase:data><testcase:data baseType="#EMP_TYPE" id="input.arg0.EMP_TYPE.EMP_TYPE" offset="0"/></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT" id="arg1.SALES_AMOUNT"><properties:properties><properties:property name="value" type="string">F0F7F0F0F0F0F0F0</properties:property><properties:property name="expectedValue" type="string">F0F7F0F0F0F0F0F0</properties:property></properties:properties></testcase:data><testcase:data baseType="#SALES_AMOUNT" id="input.arg1.SALES_AMOUNT.SALES_AMOUNT" offset="0"/></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL" id="arg2.COMM_TOTAL"><properties:properties><properties:property name="value" type="string">0000000F</properties:property><properties:property name="expectedValue" type="string">0560000F</properties:property></properties:properties></testcase:data><testcase:data baseType="#COMM_TOTAL" id="input.arg2.COMM_TOTAL.COMM_TOTAL" offset="0"/></testcase:input><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_EMP-TYPE.listructure"/><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_SALES-AMOUNT.listructure"/><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_COMM-TOTAL.listructure"/><testcase:checkconditions><checkconditions:complexCheckcondition message="Complex check condition failed" name="Complex check condition"/><checkconditions:simpleCheckcondition message="Check for EMP_TYPE failed" name="Check for EMP_TYPE" refData="#input.arg0.EMP_TYPE.EMP_TYPE"><checkconditions:expression>'S' eq output.arg0.EMP_TYPE.EMP_TYPE</checkconditions:expression><checkconditions:expectation assert="=" type="string">S</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for SALES_AMOUNT failed" name="Check for SALES_AMOUNT" refData="#input.arg1.SALES_AMOUNT.SALES_AMOUNT"><checkconditions:expression>BigDecimalCreator.make('70000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">70000.00</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for COMM_TOTAL failed" name="Check for COMM_TOTAL" refData="#input.arg2.COMM_TOTAL.COMM_TOTAL"><checkconditions:expression>BigDecimalCreator.make('5600.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">5600.00</checkconditions:expectation></checkconditions:simpleCheckcondition></testcase:checkconditions><testcase:stubs/></testscenario:testcase><testscenario:testcase alias="" csect="CWXTSUBC" encoding="1047" entrypoint="CWXTSUBC" id="Unit%20Test/Scenarios/CWXTSUBC_Sales_Scenario.testscenario%23CWXTSUBCCase9" target="CWXTCOB"><testcase:description></testcase:description><testcase:ddio>SALESSUP.RXN3.DEV1.LOAD.DB</testcase:ddio><testcase:ddiotype>DDIO</testcase:ddiotype><testcase:targetCaptureCompileTime>1552459650000</testcase:targetCaptureCompileTime><testcase:interface>#Unit%20Test/Interfaces/CWXTSUBC.interface</testcase:interface><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_EMP-TYPE.listructure"><testcase:data baseType="#EMP_TYPE" id="arg0.EMP_TYPE"><properties:properties><properties:property name="value" type="string">E2</properties:property><properties:property name="expectedValue" type="string">E2</properties:property></properties:properties></testcase:data><testcase:data baseType="#EMP_TYPE" id="input.arg0.EMP_TYPE.EMP_TYPE" offset="0"/></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_SALES-AMOUNT.listructure"><testcase:data baseType="#SALES_AMOUNT" id="arg1.SALES_AMOUNT"><properties:properties><properties:property name="value" type="string">F2F5F0F0F0F0F0F0</properties:property><properties:property name="expectedValue" type="string">F2F5F0F0F0F0F0F0</properties:property></properties:properties></testcase:data><testcase:data baseType="#SALES_AMOUNT" id="input.arg1.SALES_AMOUNT.SALES_AMOUNT" offset="0"/></testcase:input><testcase:input listructure="#Unit%20Test/Structures/CWXTCOB_COMM-TOTAL.listructure"><testcase:data baseType="#COMM_TOTAL" id="arg2.COMM_TOTAL"><properties:properties><properties:property name="value" type="string">0000000F</properties:property><properties:property name="expectedValue" type="string">2500000F</properties:property></properties:properties></testcase:data><testcase:data baseType="#COMM_TOTAL" id="input.arg2.COMM_TOTAL.COMM_TOTAL" offset="0"/></testcase:input><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_EMP-TYPE.listructure"/><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_SALES-AMOUNT.listructure"/><testcase:output listructure="#Unit%20Test/Structures/CWXTCOB_COMM-TOTAL.listructure"/><testcase:checkconditions><checkconditions:complexCheckcondition message="Complex check condition failed" name="Complex check condition"/><checkconditions:simpleCheckcondition message="Check for EMP_TYPE failed" name="Check for EMP_TYPE" refData="#input.arg0.EMP_TYPE.EMP_TYPE"><checkconditions:expression>'S' eq output.arg0.EMP_TYPE.EMP_TYPE</checkconditions:expression><checkconditions:expectation assert="=" type="string">S</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for SALES_AMOUNT failed" name="Check for SALES_AMOUNT" refData="#input.arg1.SALES_AMOUNT.SALES_AMOUNT"><checkconditions:expression>BigDecimalCreator.make('250000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">250000.00</checkconditions:expectation></checkconditions:simpleCheckcondition><checkconditions:simpleCheckcondition message="Check for COMM_TOTAL failed" name="Check for COMM_TOTAL" refData="#input.arg2.COMM_TOTAL.COMM_TOTAL"><checkconditions:expression>BigDecimalCreator.make('37500.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0</checkconditions:expression><checkconditions:expectation assert="=" type="number">37500.00</checkconditions:expectation></checkconditions:simpleCheckcondition></testcase:checkconditions><testcase:stubs/></testscenario:testcase></testscenario:testcases></testscenario:testscenario><testsuite:testsuite alias="" id="Unit%20Test%5C.temp/CWXTSUBC_Sales_Scenario.testsuite"><testsuite:description></testsuite:description><testsuite:testscenario>#Unit%20Test/Scenarios/CWXTSUBC_Sales_Scenario.testscenario</testsuite:testscenario></testsuite:testsuite><properties:properties><properties:property name="archiveTimestamp" type="number">2020-05-22 14:38:18</properties:property><properties:property name="runnerDatabaseReset" type="boolean">false</properties:property><properties:property name="runnerRepeat" type="boolean">0</properties:property><properties:property name="runnerUseStubs" type="boolean">true</properties:property><properties:property name="TTOUTLOG" type="string">Unit Test/Output/History/CWXTSUBC_Sales_Scenario.log</properties:property><properties:property name="TTOUTLOGFULLPAH" type="string">file:/C:/Users/cwde-rnuesse.EMEA/git/FTSDEMO_RXN3_Unit_Tests/CWXTSUBC_Unit_Tests/Unit%20Test/Output/History/CWXTSUBC_Sales_Scenario.log</properties:property></properties:properties><archive:abendInfo><archive:lines></archive:lines><archive:lines>Job HDDRXM0T(J0872174) ended with ABEND code: S806</archive:lines><archive:lines></archive:lines><archive:lines>JCL was submitted from: Runner_PATH1.jcl</archive:lines><archive:lines></archive:lines><archive:lines></archive:lines><archive:lines>***************** Abend-AID information *****************</archive:lines><archive:lines></archive:lines><archive:lines>AB400A      ===== ABEND-AID =====</archive:lines><archive:lines>REPORT WRITTEN TO:</archive:lines><archive:lines>SYS2.CPWR.AA.REPORT.SHRDIR</archive:lines><archive:lines>REPORT NUMBER: 0017047</archive:lines><archive:lines>JOB-HDDRXM0T STEP-RUNNER</archive:lines><archive:lines>LE COND CODE=CEE3501S / EXPECTED COMP CODE=S806</archive:lines><archive:lines>Enter one of the following commands when in job output</archive:lines><archive:lines>with AB400A message to be taken directly to report:</archive:lines><archive:lines>AAH - for AbendAID Viewing Server AACCVS01 CWCC</archive:lines><archive:lines>AA9 - for AbendAID Viewing Server AACCVS01 CWC2</archive:lines><archive:lines>AB400B http://CWCC.NASA.CPWR.CORP:06952/AAVIEW?RPT=0017047</archive:lines></archive:abendInfo></archive:archive>