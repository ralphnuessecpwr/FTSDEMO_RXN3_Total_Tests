<?xml version="1.0" encoding="UTF-8"?>
<?totaltestVersion 19.3.1.v20181214-1343_790?>
<!--Topaz for Total Test 19.3.1.v20181214-1343_790 19.03.2019 15:38:22-->
<result:result xmlns:result="http://www.compuware.com/model/xml/result"><result:testsuite errorCount="0" failureCount="1" testCount="18" testsuite="platform:/resource/CWXTSUBC_Unit_Tests/Unit%20Test/Output/Last%20Execution/CWXTSUBC_Mgmt_Scenario.archive#Unit%20Test%5C.temp/CWXTSUBC_Mgmt_Scenario.testsuite"><result:testscenarios errorCount="0" failureCount="1" testCount="18" testscenario="platform:/resource/CWXTSUBC_Unit_Tests/Unit%20Test/Output/Last%20Execution/CWXTSUBC_Mgmt_Scenario.archive#Unit%20Test/Scenarios/CWXTSUBC_Mgmt_Scenario.testscenario"><result:testcases errorCount="0" failureCount="0" testCount="3" testcase="platform:/resource/CWXTSUBC_Unit_Tests/Unit%20Test/Output/Last%20Execution/CWXTSUBC_Mgmt_Scenario.archive#Unit%20Test/Scenarios/CWXTSUBC_Mgmt_Scenario.testscenario%23CWXTSUBCCase1"><result:results expectedAssert="=" expectedValue="M" expression="'M' eq output.arg0.EMP_TYPE.EMP_TYPE" name="Check for EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="75000.00" expression="BigDecimalCreator.make('75000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results expectedAssert="=" expectedValue="1500.00" expression="BigDecimalCreator.make('1500.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="3" testcase="platform:/resource/CWXTSUBC_Unit_Tests/Unit%20Test/Output/Last%20Execution/CWXTSUBC_Mgmt_Scenario.archive#Unit%20Test/Scenarios/CWXTSUBC_Mgmt_Scenario.testscenario%23CWXTSUBCCase2"><result:results expectedAssert="=" expectedValue="M" expression="'M' eq output.arg0.EMP_TYPE.EMP_TYPE" name="Check for EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="150000.00" expression="BigDecimalCreator.make('150000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results expectedAssert="=" expectedValue="3750.00" expression="BigDecimalCreator.make('3750.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="3" testcase="platform:/resource/CWXTSUBC_Unit_Tests/Unit%20Test/Output/Last%20Execution/CWXTSUBC_Mgmt_Scenario.archive#Unit%20Test/Scenarios/CWXTSUBC_Mgmt_Scenario.testscenario%23CWXTSUBCCase3"><result:results expectedAssert="=" expectedValue="M" expression="'M' eq output.arg0.EMP_TYPE.EMP_TYPE" name="Check for EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="250000.00" expression="BigDecimalCreator.make('250000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results expectedAssert="=" expectedValue="7500.00" expression="BigDecimalCreator.make('7500.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="3" testcase="platform:/resource/CWXTSUBC_Unit_Tests/Unit%20Test/Output/Last%20Execution/CWXTSUBC_Mgmt_Scenario.archive#Unit%20Test/Scenarios/CWXTSUBC_Mgmt_Scenario.testscenario%23CWXTSUBCCase4"><result:results expectedAssert="=" expectedValue="M" expression="'M' eq output.arg0.EMP_TYPE.EMP_TYPE" name="Check for EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="350000.00" expression="BigDecimalCreator.make('350000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results expectedAssert="=" expectedValue="12250.00" expression="BigDecimalCreator.make('12250.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="3" testcase="platform:/resource/CWXTSUBC_Unit_Tests/Unit%20Test/Output/Last%20Execution/CWXTSUBC_Mgmt_Scenario.archive#Unit%20Test/Scenarios/CWXTSUBC_Mgmt_Scenario.testscenario%23CWXTSUBCCase5"><result:results expectedAssert="=" expectedValue="M" expression="'M' eq output.arg0.EMP_TYPE.EMP_TYPE" name="Check for EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="450000.00" expression="BigDecimalCreator.make('450000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results expectedAssert="=" expectedValue="18000.00" expression="BigDecimalCreator.make('18000.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="1" testCount="3" testcase="platform:/resource/CWXTSUBC_Unit_Tests/Unit%20Test/Output/Last%20Execution/CWXTSUBC_Mgmt_Scenario.archive#Unit%20Test/Scenarios/CWXTSUBC_Mgmt_Scenario.testscenario%23CWXTSUBCCase6"><result:results expectedAssert="=" expectedValue="M" expression="'M' eq output.arg0.EMP_TYPE.EMP_TYPE" name="Check for EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="550000.00" expression="BigDecimalCreator.make('550000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results actualValue="22000.00" expectedAssert="=" expectedValue="27500.00" expression="BigDecimalCreator.make('27500.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" message="Check for COMM_TOTAL failed" name="Check for COMM_TOTAL" result="Failure"/></result:testcases></result:testscenarios></result:testsuite></result:result>