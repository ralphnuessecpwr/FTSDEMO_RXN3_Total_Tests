
***************** Output from TTOUT *****************

 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386A9028
 ---TARGCALL---entry newTARGET: 386A9028
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386A9090
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386A90A0
 ---addTargetArg---workingArea: 386A9090
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386A9090
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386A9090
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386A9100
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386A90A0
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386A90A0
 ---addTargetArg---workingArea: 386A9100
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386A9100
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386A9100
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386A90D0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386A90A0
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386A90A0
 ---addTargetArg---workingArea: 386A90D0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386A90D0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386A90D0
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386A9128
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386A90A0
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386A90A0
 ---addTargetArg---workingArea: 386A9128
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386A9128
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386A9128
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386A9138
 ---TARGCALL---entry newTARGET: 386A9138
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386A91A0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386A91B0
 ---addTargetArg---workingArea: 386A91A0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386A91A0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386A91A0
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386A98D0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386A91B0
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386A91B0
 ---addTargetArg---workingArea: 386A98D0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386A98D0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386A98D0
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386A98B8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386A91B0
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386A91B0
 ---addTargetArg---workingArea: 386A98B8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386A98B8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386A98B8
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386A98F8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386A91B0
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386A91B0
 ---addTargetArg---workingArea: 386A98F8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386A98F8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386A98F8
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386A9908
 ---TARGCALL---entry newTARGET: 386A9908
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386A9970
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386A9980
 ---addTargetArg---workingArea: 386A9970
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386A9970
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386A9970
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386AA0A0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386A9980
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386A9980
 ---addTargetArg---workingArea: 386AA0A0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AA0A0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AA0A0
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386AA088
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386A9980
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386A9980
 ---addTargetArg---workingArea: 386AA088
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AA088
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AA088
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386AA0C8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386A9980
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386A9980
 ---addTargetArg---workingArea: 386AA0C8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AA0C8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AA0C8
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386AA0D8
 ---TARGCALL---entry newTARGET: 386AA0D8
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386AA140
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AA150
 ---addTargetArg---workingArea: 386AA140
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AA140
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AA140
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386AA870
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AA150
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AA150
 ---addTargetArg---workingArea: 386AA870
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AA870
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AA870
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386AA858
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AA150
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AA150
 ---addTargetArg---workingArea: 386AA858
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AA858
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AA858
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386AA898
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AA150
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AA150
 ---addTargetArg---workingArea: 386AA898
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AA898
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AA898
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386AA8A8
 ---TARGCALL---entry newTARGET: 386AA8A8
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386AA910
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AA920
 ---addTargetArg---workingArea: 386AA910
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AA910
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AA910
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386AB040
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AA920
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AA920
 ---addTargetArg---workingArea: 386AB040
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AB040
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AB040
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386AB028
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AA920
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AA920
 ---addTargetArg---workingArea: 386AB028
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AB028
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AB028
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386AB068
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AA920
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AA920
 ---addTargetArg---workingArea: 386AB068
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AB068
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AB068
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386AB078
 ---TARGCALL---entry newTARGET: 386AB078
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386AB0E0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AB0F0
 ---addTargetArg---workingArea: 386AB0E0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AB0E0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AB0E0
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386AB810
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AB0F0
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AB0F0
 ---addTargetArg---workingArea: 386AB810
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AB810
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AB810
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386AB7F8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AB0F0
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AB0F0
 ---addTargetArg---workingArea: 386AB7F8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AB7F8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AB7F8
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386AB838
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AB0F0
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AB0F0
 ---addTargetArg---workingArea: 386AB838
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AB838
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AB838
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386AB848
 ---TARGCALL---entry newTARGET: 386AB848
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386AB8B0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AB8C0
 ---addTargetArg---workingArea: 386AB8B0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AB8B0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AB8B0
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386ABFE0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AB8C0
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AB8C0
 ---addTargetArg---workingArea: 386ABFE0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386ABFE0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386ABFE0
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386ABFC8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AB8C0
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AB8C0
 ---addTargetArg---workingArea: 386ABFC8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386ABFC8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386ABFC8
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386AC008
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AB8C0
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AB8C0
 ---addTargetArg---workingArea: 386AC008
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AC008
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AC008
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386AC018
 ---TARGCALL---entry newTARGET: 386AC018
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386AC080
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AC090
 ---addTargetArg---workingArea: 386AC080
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AC080
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AC080
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386AC7B0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AC090
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AC090
 ---addTargetArg---workingArea: 386AC7B0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AC7B0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AC7B0
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386AC798
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AC090
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AC090
 ---addTargetArg---workingArea: 386AC798
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AC798
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AC798
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386AC7D8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AC090
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AC090
 ---addTargetArg---workingArea: 386AC7D8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AC7D8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AC7D8
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386AC7E8
 ---TARGCALL---entry newTARGET: 386AC7E8
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386AC850
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AC860
 ---addTargetArg---workingArea: 386AC850
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AC850
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AC850
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386ACF80
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AC860
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AC860
 ---addTargetArg---workingArea: 386ACF80
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386ACF80
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386ACF80
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386ACF68
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AC860
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AC860
 ---addTargetArg---workingArea: 386ACF68
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386ACF68
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386ACF68
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386ACFA8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AC860
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AC860
 ---addTargetArg---workingArea: 386ACFA8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386ACFA8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386ACFA8
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386ACFB8
 ---TARGCALL---entry newTARGET: 386ACFB8
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386AD020
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AD030
 ---addTargetArg---workingArea: 386AD020
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AD020
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AD020
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386AD750
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AD030
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AD030
 ---addTargetArg---workingArea: 386AD750
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AD750
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AD750
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386AD738
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AD030
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AD030
 ---addTargetArg---workingArea: 386AD738
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AD738
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AD738
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386AD778
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AD030
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AD030
 ---addTargetArg---workingArea: 386AD778
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AD778
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AD778
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386AD788
 ---TARGCALL---entry newTARGET: 386AD788
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386AD7F0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AD800
 ---addTargetArg---workingArea: 386AD7F0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AD7F0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AD7F0
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386ADF20
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AD800
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AD800
 ---addTargetArg---workingArea: 386ADF20
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386ADF20
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386ADF20
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386ADF08
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AD800
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AD800
 ---addTargetArg---workingArea: 386ADF08
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386ADF08
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386ADF08
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386ADF48
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AD800
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AD800
 ---addTargetArg---workingArea: 386ADF48
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386ADF48
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386ADF48
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386ADF58
 ---TARGCALL---entry newTARGET: 386ADF58
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386ADFC0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386ADFD0
 ---addTargetArg---workingArea: 386ADFC0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386ADFC0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386ADFC0
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386AE6F0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386ADFD0
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386ADFD0
 ---addTargetArg---workingArea: 386AE6F0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AE6F0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AE6F0
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386AE6D8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386ADFD0
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386ADFD0
 ---addTargetArg---workingArea: 386AE6D8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AE6D8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AE6D8
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386AE718
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386ADFD0
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386ADFD0
 ---addTargetArg---workingArea: 386AE718
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AE718
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AE718
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386AE728
 ---TARGCALL---entry newTARGET: 386AE728
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386AE790
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AE7A0
 ---addTargetArg---workingArea: 386AE790
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AE790
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AE790
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386AEEC0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AE7A0
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AE7A0
 ---addTargetArg---workingArea: 386AEEC0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AEEC0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AEEC0
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386AEEA8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AE7A0
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AE7A0
 ---addTargetArg---workingArea: 386AEEA8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AEEA8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AEEA8
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386AEEE8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AE7A0
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AE7A0
 ---addTargetArg---workingArea: 386AEEE8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AEEE8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AEEE8
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386AEEF8
 ---TARGCALL---entry newTARGET: 386AEEF8
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386AEF60
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AEF70
 ---addTargetArg---workingArea: 386AEF60
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AEF60
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AEF60
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386AF690
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AEF70
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AEF70
 ---addTargetArg---workingArea: 386AF690
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AF690
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AF690
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386AF678
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AEF70
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AEF70
 ---addTargetArg---workingArea: 386AF678
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AF678
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AF678
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386AF6B8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AEF70
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AEF70
 ---addTargetArg---workingArea: 386AF6B8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AF6B8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AF6B8
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386AF6C8
 ---TARGCALL---entry newTARGET: 386AF6C8
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386AF730
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AF740
 ---addTargetArg---workingArea: 386AF730
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AF730
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AF730
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386AFE60
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AF740
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AF740
 ---addTargetArg---workingArea: 386AFE60
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AFE60
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AFE60
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386AFE48
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AF740
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AF740
 ---addTargetArg---workingArea: 386AFE48
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AFE48
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AFE48
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386AFE88
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AF740
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AF740
 ---addTargetArg---workingArea: 386AFE88
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AFE88
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AFE88
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386AFE98
 ---TARGCALL---entry newTARGET: 386AFE98
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386AFF00
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AFF10
 ---addTargetArg---workingArea: 386AFF00
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AFF00
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AFF00
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386B0630
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AFF10
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AFF10
 ---addTargetArg---workingArea: 386B0630
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B0630
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B0630
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B0618
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AFF10
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AFF10
 ---addTargetArg---workingArea: 386B0618
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B0618
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B0618
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B0658
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AFF10
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AFF10
 ---addTargetArg---workingArea: 386B0658
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B0658
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B0658
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386B0668
 ---TARGCALL---entry newTARGET: 386B0668
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386B06D0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B06E0
 ---addTargetArg---workingArea: 386B06D0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B06D0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B06D0
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386B0E00
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B06E0
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B06E0
 ---addTargetArg---workingArea: 386B0E00
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B0E00
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B0E00
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B0DE8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B06E0
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B06E0
 ---addTargetArg---workingArea: 386B0DE8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B0DE8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B0DE8
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B0E28
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B06E0
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B06E0
 ---addTargetArg---workingArea: 386B0E28
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B0E28
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B0E28
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386B0E38
 ---TARGCALL---entry newTARGET: 386B0E38
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386B0EA0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B0EB0
 ---addTargetArg---workingArea: 386B0EA0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B0EA0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B0EA0
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386B15D0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B0EB0
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B0EB0
 ---addTargetArg---workingArea: 386B15D0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B15D0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B15D0
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B15B8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B0EB0
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B0EB0
 ---addTargetArg---workingArea: 386B15B8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B15B8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B15B8
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B15F8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B0EB0
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B0EB0
 ---addTargetArg---workingArea: 386B15F8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B15F8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B15F8
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386B1608
 ---TARGCALL---entry newTARGET: 386B1608
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386B1670
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B1680
 ---addTargetArg---workingArea: 386B1670
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B1670
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B1670
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386B1DA0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B1680
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B1680
 ---addTargetArg---workingArea: 386B1DA0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B1DA0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B1DA0
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B1D88
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B1680
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B1680
 ---addTargetArg---workingArea: 386B1D88
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B1D88
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B1D88
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B1DC8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B1680
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B1680
 ---addTargetArg---workingArea: 386B1DC8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B1DC8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B1DC8
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386B1DD8
 ---TARGCALL---entry newTARGET: 386B1DD8
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386B1E40
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B1E50
 ---addTargetArg---workingArea: 386B1E40
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B1E40
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B1E40
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386B2570
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B1E50
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B1E50
 ---addTargetArg---workingArea: 386B2570
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B2570
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B2570
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B2558
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B1E50
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B1E50
 ---addTargetArg---workingArea: 386B2558
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B2558
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B2558
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B2598
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B1E50
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B1E50
 ---addTargetArg---workingArea: 386B2598
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B2598
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B2598
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386B25A8
 ---TARGCALL---entry newTARGET: 386B25A8
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386B2610
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B2620
 ---addTargetArg---workingArea: 386B2610
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B2610
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B2610
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386B2D40
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B2620
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B2620
 ---addTargetArg---workingArea: 386B2D40
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B2D40
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B2D40
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B2D28
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B2620
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B2620
 ---addTargetArg---workingArea: 386B2D28
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B2D28
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B2D28
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B2D68
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B2620
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B2620
 ---addTargetArg---workingArea: 386B2D68
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B2D68
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B2D68
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386B2D78
 ---TARGCALL---entry newTARGET: 386B2D78
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386B2DE0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B2DF0
 ---addTargetArg---workingArea: 386B2DE0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B2DE0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B2DE0
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386B3510
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B2DF0
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B2DF0
 ---addTargetArg---workingArea: 386B3510
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B3510
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B3510
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B34F8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B2DF0
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B2DF0
 ---addTargetArg---workingArea: 386B34F8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B34F8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B34F8
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B3538
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B2DF0
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B2DF0
 ---addTargetArg---workingArea: 386B3538
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B3538
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B3538
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386B3548
 ---TARGCALL---entry newTARGET: 386B3548
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386B35B0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B35C0
 ---addTargetArg---workingArea: 386B35B0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B35B0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B35B0
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386B3CE0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B35C0
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B35C0
 ---addTargetArg---workingArea: 386B3CE0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B3CE0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B3CE0
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B3CC8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B35C0
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B35C0
 ---addTargetArg---workingArea: 386B3CC8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B3CC8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B3CC8
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B3D08
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B35C0
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B35C0
 ---addTargetArg---workingArea: 386B3D08
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B3D08
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B3D08
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386B3D18
 ---TARGCALL---entry newTARGET: 386B3D18
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386B3D80
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B3D90
 ---addTargetArg---workingArea: 386B3D80
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B3D80
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B3D80
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386B44B0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B3D90
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B3D90
 ---addTargetArg---workingArea: 386B44B0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B44B0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B44B0
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B4498
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B3D90
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B3D90
 ---addTargetArg---workingArea: 386B4498
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B4498
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B4498
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B44D8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B3D90
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B3D90
 ---addTargetArg---workingArea: 386B44D8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B44D8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B44D8
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386B44E8
 ---TARGCALL---entry newTARGET: 386B44E8
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386B4550
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B4560
 ---addTargetArg---workingArea: 386B4550
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B4550
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B4550
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386B4C80
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B4560
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B4560
 ---addTargetArg---workingArea: 386B4C80
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B4C80
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B4C80
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B4C68
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B4560
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B4560
 ---addTargetArg---workingArea: 386B4C68
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B4C68
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B4C68
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B4CA8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B4560
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B4560
 ---addTargetArg---workingArea: 386B4CA8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B4CA8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B4CA8
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386B4CB8
 ---TARGCALL---entry newTARGET: 386B4CB8
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386B4D20
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B4D30
 ---addTargetArg---workingArea: 386B4D20
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B4D20
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B4D20
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386B5450
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B4D30
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B4D30
 ---addTargetArg---workingArea: 386B5450
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B5450
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B5450
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B5438
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B4D30
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B4D30
 ---addTargetArg---workingArea: 386B5438
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B5438
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B5438
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B5478
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B4D30
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B4D30
 ---addTargetArg---workingArea: 386B5478
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B5478
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B5478
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386B5488
 ---TARGCALL---entry newTARGET: 386B5488
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386B54F0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B5500
 ---addTargetArg---workingArea: 386B54F0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B54F0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B54F0
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386B5C20
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B5500
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B5500
 ---addTargetArg---workingArea: 386B5C20
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B5C20
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B5C20
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B5C08
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B5500
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B5500
 ---addTargetArg---workingArea: 386B5C08
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B5C08
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B5C08
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B5C48
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B5500
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B5500
 ---addTargetArg---workingArea: 386B5C48
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B5C48
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B5C48
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386B5C58
 ---TARGCALL---entry newTARGET: 386B5C58
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386B5CC0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B5CD0
 ---addTargetArg---workingArea: 386B5CC0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B5CC0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B5CC0
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386B63F0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B5CD0
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B5CD0
 ---addTargetArg---workingArea: 386B63F0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B63F0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B63F0
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B63D8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B5CD0
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B5CD0
 ---addTargetArg---workingArea: 386B63D8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B63D8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B63D8
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B6418
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B5CD0
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B5CD0
 ---addTargetArg---workingArea: 386B6418
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B6418
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B6418
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386B6428
 ---TARGCALL---entry newTARGET: 386B6428
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386B6490
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B64A0
 ---addTargetArg---workingArea: 386B6490
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B6490
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B6490
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386B6BC0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B64A0
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B64A0
 ---addTargetArg---workingArea: 386B6BC0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B6BC0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B6BC0
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B6BA8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B64A0
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B64A0
 ---addTargetArg---workingArea: 386B6BA8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B6BA8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B6BA8
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B6BE8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B64A0
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B64A0
 ---addTargetArg---workingArea: 386B6BE8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B6BE8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B6BE8
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386B6BF8
 ---TARGCALL---entry newTARGET: 386B6BF8
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386B6C60
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B6C70
 ---addTargetArg---workingArea: 386B6C60
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B6C60
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B6C60
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386B7390
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B6C70
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B6C70
 ---addTargetArg---workingArea: 386B7390
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B7390
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B7390
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B7378
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B6C70
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B6C70
 ---addTargetArg---workingArea: 386B7378
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B7378
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B7378
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B73B8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B6C70
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B6C70
 ---addTargetArg---workingArea: 386B73B8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B73B8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B73B8
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386B73C8
 ---TARGCALL---entry newTARGET: 386B73C8
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386B7430
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B7440
 ---addTargetArg---workingArea: 386B7430
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B7430
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B7430
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386B7B60
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B7440
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B7440
 ---addTargetArg---workingArea: 386B7B60
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B7B60
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B7B60
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B7B48
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B7440
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B7440
 ---addTargetArg---workingArea: 386B7B48
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B7B48
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B7B48
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B7B88
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B7440
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B7440
 ---addTargetArg---workingArea: 386B7B88
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B7B88
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B7B88
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386B7B98
 ---TARGCALL---entry newTARGET: 386B7B98
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386B7C00
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B7C10
 ---addTargetArg---workingArea: 386B7C00
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B7C00
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B7C00
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386B8330
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B7C10
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B7C10
 ---addTargetArg---workingArea: 386B8330
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B8330
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B8330
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B8318
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B7C10
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B7C10
 ---addTargetArg---workingArea: 386B8318
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B8318
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B8318
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B8358
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B7C10
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B7C10
 ---addTargetArg---workingArea: 386B8358
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B8358
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B8358
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386B8368
 ---TARGCALL---entry newTARGET: 386B8368
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386B83D0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B83E0
 ---addTargetArg---workingArea: 386B83D0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B83D0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B83D0
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386B8B00
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B83E0
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B83E0
 ---addTargetArg---workingArea: 386B8B00
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B8B00
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B8B00
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B8AE8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B83E0
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B83E0
 ---addTargetArg---workingArea: 386B8AE8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B8AE8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B8AE8
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B8B28
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B83E0
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B83E0
 ---addTargetArg---workingArea: 386B8B28
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B8B28
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B8B28
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386B8B38
 ---TARGCALL---entry newTARGET: 386B8B38
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386B8BA0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B8BB0
 ---addTargetArg---workingArea: 386B8BA0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B8BA0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B8BA0
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386B92D0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B8BB0
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B8BB0
 ---addTargetArg---workingArea: 386B92D0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B92D0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B92D0
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B92B8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B8BB0
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B8BB0
 ---addTargetArg---workingArea: 386B92B8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B92B8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B92B8
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B92F8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B8BB0
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B8BB0
 ---addTargetArg---workingArea: 386B92F8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B92F8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B92F8
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386B9308
 ---TARGCALL---entry newTARGET: 386B9308
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386B9370
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B9380
 ---addTargetArg---workingArea: 386B9370
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B9370
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B9370
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386B9AA0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B9380
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B9380
 ---addTargetArg---workingArea: 386B9AA0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B9AA0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B9AA0
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B9A88
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B9380
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B9380
 ---addTargetArg---workingArea: 386B9A88
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B9A88
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B9A88
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386B9AC8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B9380
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B9380
 ---addTargetArg---workingArea: 386B9AC8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B9AC8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B9AC8
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386B9AD8
 ---TARGCALL---entry newTARGET: 386B9AD8
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386B9B40
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B9B50
 ---addTargetArg---workingArea: 386B9B40
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386B9B40
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386B9B40
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386BA270
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B9B50
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B9B50
 ---addTargetArg---workingArea: 386BA270
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386BA270
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386BA270
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386BA258
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B9B50
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B9B50
 ---addTargetArg---workingArea: 386BA258
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386BA258
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386BA258
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386BA298
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386B9B50
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386B9B50
 ---addTargetArg---workingArea: 386BA298
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386BA298
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386BA298
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386BA2A8
 ---TARGCALL---entry newTARGET: 386BA2A8
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386BA310
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386BA320
 ---addTargetArg---workingArea: 386BA310
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386BA310
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386BA310
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386BAA40
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386BA320
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386BA320
 ---addTargetArg---workingArea: 386BAA40
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386BAA40
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386BAA40
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386BAA28
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386BA320
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386BA320
 ---addTargetArg---workingArea: 386BAA28
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386BAA28
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386BAA28
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386BAA68
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386BA320
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386BA320
 ---addTargetArg---workingArea: 386BAA68
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386BAA68
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386BAA68
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019338, Length = 40
   data = c3e7c3e6e7e3c4c1e3c509394bdb7a1802e85c3019deaf0c5dec030b190000000000000000000000
   program = CWXTDATE, ddio(27) = SALESSUP.RXN3.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTDATE, entry: CWXTDATE
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386BAA78
 ---TARGCALL---entry newTARGET: 386BAA78
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386BAAE0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386BAAF0
 ---addTargetArg---workingArea: 386BAAE0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386BAAE0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386BAAE0
 ---TARGARG---entry
 beforeLength: 2
 afterLength: 2
 ---T addTargetArg---entry
 ---setData---entry
 bL: 2, aL: 2
 ---setData---exit --- A(data): 386BB210
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386BAAF0
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386BAAF0
 ---addTargetArg---workingArea: 386BB210
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386BB210
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386BB210
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386BB1F8
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386BAAF0
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386BAAF0
 ---addTargetArg---workingArea: 386BB1F8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386BB1F8
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386BB1F8
 ---TARGARG---entry
 beforeLength: 6
 afterLength: 6
 ---T addTargetArg---entry
 ---setData---entry
 bL: 6, aL: 6
 ---setData---exit --- A(data): 386BB238
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386BAAF0
 AV #: 3
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386BAAF0
 ---addTargetArg---workingArea: 386BB238
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386BB238
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386BB238
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 2, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 6, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
