<?xml version="1.0" encoding="UTF-8"?>
<?totaltestVersion 19.3.1.v20181214-1343_790?>
<!--Topaz for Total Test 19.3.1.v20181214-1343_790 21.02.2019 15:43:34-->
<result:result xmlns:result="http://www.compuware.com/model/xml/result"><result:testsuite errorCount="0" failureCount="1" testCount="189" testsuite="platform:/resource/LGTESTC1_Dev_Unit_Tests/Unit%20Test/Output/Last%20Execution/LGTESTC1_Scenario1.archive#Unit%20Test%5C.temp/LGTESTC1_Scenario1.testsuite"><result:testscenarios errorCount="0" failureCount="1" testCount="189" testscenario="platform:/resource/LGTESTC1_Dev_Unit_Tests/Unit%20Test/Output/Last%20Execution/LGTESTC1_Scenario1.archive#Unit%20Test/Scenarios/LGTESTC1_Scenario1.testscenario"><result:testcases errorCount="0" failureCount="1" testCount="189" testcase="platform:/resource/LGTESTC1_Dev_Unit_Tests/Unit%20Test/Output/Last%20Execution/LGTESTC1_Scenario1.archive#Unit%20Test/Scenarios/LGTESTC1_Scenario1.testscenario%23LGTESTC1Case1"><result:results expectedAssert="=" expectedValue="141243" expression="BigDecimalCreator.make('141243').compareTo(output.arg0.dfheiblk.eibtime) eq 0" name="Check for eibtime" result="Success"/><result:results expectedAssert="=" expectedValue="119051" expression="BigDecimalCreator.make('119051').compareTo(output.arg0.dfheiblk.eibdate) eq 0" name="Check for eibdate" result="Success"/><result:results expectedAssert="=" expectedValue="SSC1" expression="'SSC1' eq output.arg0.dfheiblk.eibtrnid" name="Check for eibtrnid" result="Success"/><result:results expectedAssert="=" expectedValue="304" expression="BigDecimalCreator.make('304').compareTo(output.arg0.dfheiblk.eibtaskn) eq 0" name="Check for eibtaskn" result="Success"/><result:results expectedAssert="=" expectedValue="1991" expression="'1991' eq output.arg0.dfheiblk.eibtrmid" name="Check for eibtrmid" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(output.arg0.dfheiblk.dfheigdi) eq 0" name="Check for dfheigdi" result="Success"/><result:results expectedAssert="=" expectedValue="1848" expression="BigDecimalCreator.make('1848').compareTo(output.arg0.dfheiblk.eibcposn) eq 0" name="Check for eibcposn" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(output.arg0.dfheiblk.eibcalen) eq 0" name="Check for eibcalen" result="Success"/><result:results expectedAssert="=" expectedValue="8" expression="'8' eq output.arg0.dfheiblk.eibaid" name="Check for eibaid" result="Success"/><result:results expectedAssert="=" expectedValue="x'1804'" expression="x'1804' eq output.arg0.dfheiblk.eibfn" name="Check for eibfn" result="Success"/><result:results expectedAssert="=" expectedValue="x'000000000000'" expression="x'000000000000' eq output.arg0.dfheiblk.eibrcode" name="Check for eibrcode" result="Success"/><result:results expectedAssert="=" expectedValue="x'0000000000000000'" expression="x'0000000000000000' eq output.arg0.dfheiblk.eibds" name="Check for eibds" result="Success"/><result:results expectedAssert="=" expectedValue="x'0000000000000000'" expression="x'0000000000000000' eq output.arg0.dfheiblk.eibreqid" name="Check for eibreqid" result="Success"/><result:results expectedAssert="=" expectedValue="SSMAPC1" expression="'SSMAPC1' eq output.arg0.dfheiblk.eibrsrce" name="Check for eibrsrce" result="Success"/><result:results expectedAssert="=" expectedValue="x'00'" expression="x'00' eq output.arg0.dfheiblk.eibsync" name="Check for eibsync" result="Success"/><result:results expectedAssert="=" expectedValue="x'00'" expression="x'00' eq output.arg0.dfheiblk.eibfree" name="Check for eibfree" result="Success"/><result:results expectedAssert="=" expectedValue="x'00'" expression="x'00' eq output.arg0.dfheiblk.eibrecv" name="Check for eibrecv" result="Success"/><result:results expectedAssert="=" expectedValue="x'00'" expression="x'00' eq output.arg0.dfheiblk.eibfil01" name="Check for eibfil01" result="Success"/><result:results expectedAssert="=" expectedValue="x'00'" expression="x'00' eq output.arg0.dfheiblk.eibatt" name="Check for eibatt" result="Success"/><result:results expectedAssert="=" expectedValue="x'00'" expression="x'00' eq output.arg0.dfheiblk.eibeoc" name="Check for eibeoc" result="Success"/><result:results expectedAssert="=" expectedValue="x'00'" expression="x'00' eq output.arg0.dfheiblk.eibfmh" name="Check for eibfmh" result="Success"/><result:results expectedAssert="=" expectedValue="x'00'" expression="x'00' eq output.arg0.dfheiblk.eibcompl" name="Check for eibcompl" result="Success"/><result:results expectedAssert="=" expectedValue="x'00'" expression="x'00' eq output.arg0.dfheiblk.eibsig" name="Check for eibsig" result="Success"/><result:results expectedAssert="=" expectedValue="x'00'" expression="x'00' eq output.arg0.dfheiblk.eibconf" name="Check for eibconf" result="Success"/><result:results expectedAssert="=" expectedValue="x'00'" expression="x'00' eq output.arg0.dfheiblk.eiberr" name="Check for eiberr" result="Success"/><result:results expectedAssert="=" expectedValue="x'00000000'" expression="x'00000000' eq output.arg0.dfheiblk.eiberrcd" name="Check for eiberrcd" result="Success"/><result:results expectedAssert="=" expectedValue="x'00'" expression="x'00' eq output.arg0.dfheiblk.eibsynrb" name="Check for eibsynrb" result="Success"/><result:results expectedAssert="=" expectedValue="x'00'" expression="x'00' eq output.arg0.dfheiblk.eibnodat" name="Check for eibnodat" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(output.arg0.dfheiblk.eibresp) eq 0" name="Check for eibresp" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(output.arg0.dfheiblk.eibresp2) eq 0" name="Check for eibresp2" result="Success"/><result:results expectedAssert="=" expectedValue="x'00'" expression="x'00' eq output.arg0.dfheiblk.eibrldbk" name="Check for eibrldbk" result="Success"/><result:stubAssertion errorCount="0" failureCount="1" testCount="57" stub="platform:/resource/LGTESTC1_Dev_Unit_Tests/Unit%20Test/Output/Last%20Execution/LGTESTC1_Scenario1.archive#Unit%20Test/Stubs/LGTESTC1_EXEC_CICS_RETURN1_01.stub"><result:stubdataassertions errorCount="0" failureCount="1" testCount="57" stubdata="platform:/resource/LGTESTC1_Dev_Unit_Tests/Unit%20Test/Output/Last%20Execution/LGTESTC1_Scenario1.archive#Unit%20Test/Stubs/LGTESTC1_EXEC_CICS_RETURN1_01.stub.Unit%20Test/Stubs/LGTESTC1_EXEC_CICS_RETURN1_01.stub.0"><result:results expectedAssert="=" expectedValue="SSC1" expression="'SSC1' eq result.arg1.dfhc0040.dfhc0040" name="dfhc0040" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_REQUEST_ID" name="CA_REQUEST_ID" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(result.arg2.COMM_AREA.CA_RETURN_CODE) eq 0" name="CA_RETURN_CODE" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(result.arg2.COMM_AREA.CA_CUSTOMER_NUM) eq 0" name="CA_CUSTOMER_NUM" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_REQUEST_SPECIFIC" name="CA_REQUEST_SPECIFIC" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_CUSTOMER_REQUEST.CA_FIRST_NAME" name="CA_FIRST_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_CUSTOMER_REQUEST.CA_LAST_NAME" name="CA_LAST_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_CUSTOMER_REQUEST.CA_DOB" name="CA_DOB" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_CUSTOMER_REQUEST.CA_HOUSE_NAME" name="CA_HOUSE_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_CUSTOMER_REQUEST.CA_HOUSE_NUM" name="CA_HOUSE_NUM" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_CUSTOMER_REQUEST.CA_POSTCODE" name="CA_POSTCODE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_CUSTOMER_REQUEST.CA_POLICY_DATA" name="CA_POLICY_DATA" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_POLICY_COMMON.CA_ISSUE_DATE" name="CA_ISSUE_DATE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_POLICY_COMMON.CA_EXPIRY_DATE" name="CA_EXPIRY_DATE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_POLICY_COMMON.CA_LASTCHANGED" name="CA_LASTCHANGED" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_POLICY_COMMON.CA_BROKERSREF" name="CA_BROKERSREF" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_POLICY_SPECIFIC" name="CA_POLICY_SPECIFIC" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_ENDOWMENT.CA_E_WITH_PROFITS" name="CA_E_WITH_PROFITS" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_ENDOWMENT.CA_E_EQUITIES" name="CA_E_EQUITIES" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_ENDOWMENT.CA_E_MANAGED_FUND" name="CA_E_MANAGED_FUND" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_ENDOWMENT.CA_E_FUND_NAME" name="CA_E_FUND_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_ENDOWMENT.CA_E_LIFE_ASSURED" name="CA_E_LIFE_ASSURED" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_ENDOWMENT.CA_E_PADDING_DATA" name="CA_E_PADDING_DATA" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_HOUSE.CA_H_PROPERTY_TYPE" name="CA_H_PROPERTY_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_HOUSE.CA_H_HOUSE_NAME" name="CA_H_HOUSE_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_HOUSE.CA_H_HOUSE_NUMBER" name="CA_H_HOUSE_NUMBER" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_HOUSE.CA_H_POSTCODE" name="CA_H_POSTCODE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_HOUSE.CA_H_FILLER" name="CA_H_FILLER" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_MOTOR.CA_M_MAKE" name="CA_M_MAKE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_MOTOR.CA_M_MODEL" name="CA_M_MODEL" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_MOTOR.CA_M_REGNUMBER" name="CA_M_REGNUMBER" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_MOTOR.CA_M_COLOUR" name="CA_M_COLOUR" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_MOTOR.CA_M_MANUFACTURED" name="CA_M_MANUFACTURED" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_MOTOR.CA_M_FILLER" name="CA_M_FILLER" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_COMMERCIAL.CA_B_Address" name="CA_B_Address" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_COMMERCIAL.CA_B_Postcode" name="CA_B_Postcode" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_COMMERCIAL.CA_B_Latitude" name="CA_B_Latitude" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_COMMERCIAL.CA_B_Longitude" name="CA_B_Longitude" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_COMMERCIAL.CA_B_Customer" name="CA_B_Customer" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_COMMERCIAL.CA_B_PropType" name="CA_B_PropType" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_COMMERCIAL.CA_B_RejectReason" name="CA_B_RejectReason" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_COMMERCIAL.CA_B_FILLER" name="CA_B_FILLER" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_Date" name="CA_C_Date" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_Cause" name="CA_C_Cause" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_Observations" name="CA_C_Observations" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_FILLER.SQL_TEMP" name="SQL_TEMP" result="Success"/><result:results expectedAssert="=" expectedValue="1077952576" expression="BigDecimalCreator.make('1077952576').compareTo(result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_FILLER.DSN_TEMP) eq 0" name="DSN_TEMP" result="Success"/><result:results expectedAssert="=" expectedValue="1077952576" expression="BigDecimalCreator.make('1077952576').compareTo(result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_FILLER.DSNNROWS) eq 0" name="DSNNROWS" result="Success"/><result:results expectedAssert="=" expectedValue="16448" expression="BigDecimalCreator.make('16448').compareTo(result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_FILLER.DSNNTYPE) eq 0" name="DSNNTYPE" result="Success"/><result:results expectedAssert="=" expectedValue="16448" expression="BigDecimalCreator.make('16448').compareTo(result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_FILLER.DSNNLEN) eq 0" name="DSNNLEN" result="Success"/><result:results expectedAssert="=" expectedValue="1077952576" expression="BigDecimalCreator.make('1077952576').compareTo(result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_FILLER.SQL_NULL) eq 0" name="SQL_NULL" result="Success"/><result:results expectedAssert="=" expectedValue="16448" expression="BigDecimalCreator.make('16448').compareTo(result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_FILLER.SQL_INIT_FLAG) eq 0" name="SQL_INIT_FLAG" result="Success"/><result:results expectedAssert="=" expectedValue="1077952576" expression="BigDecimalCreator.make('1077952576').compareTo(result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_FILLER.SQL_FILE_READ) eq 0" name="SQL_FILE_READ" result="Success"/><result:results expectedAssert="=" expectedValue="1077952576" expression="BigDecimalCreator.make('1077952576').compareTo(result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_FILLER.SQL_FILE_CREATE) eq 0" name="SQL_FILE_CREATE" result="Success"/><result:results expectedAssert="=" expectedValue="1077952576" expression="BigDecimalCreator.make('1077952576').compareTo(result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_FILLER.SQL_FILE_OVERWRITE) eq 0" name="SQL_FILE_OVERWRITE" result="Success"/><result:results expectedAssert="=" expectedValue="1077952576" expression="BigDecimalCreator.make('1077952576').compareTo(result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_FILLER.SQL_FILE_APPEND) eq 0" name="SQL_FILE_APPEND" result="Success"/><result:results actualValue="2522" expectedAssert="=" expectedValue="2500" expression="BigDecimalCreator.make('2500').compareTo(result.arg3.dfhb0020.dfhb0020) eq 0" message="dfhb0020 failed" name="dfhb0020" result="Failure"/></result:stubdataassertions></result:stubAssertion><result:stubAssertion errorCount="0" failureCount="0" testCount="43" stub="platform:/resource/LGTESTC1_Dev_Unit_Tests/Unit%20Test/Output/Last%20Execution/LGTESTC1_Scenario1.archive#Unit%20Test/Stubs/LGTESTC1_BMS_SEND_RECEIVE_01.stub"><result:stubdataassertions errorCount="0" failureCount="0" testCount="20" stubdata="platform:/resource/LGTESTC1_Dev_Unit_Tests/Unit%20Test/Output/Last%20Execution/LGTESTC1_Scenario1.archive#Unit%20Test/Stubs/LGTESTC1_BMS_SEND_RECEIVE_01.stub.Unit%20Test/Stubs/LGTESTC1_BMS_SEND_RECEIVE_01.stub.0"><result:results expectedAssert="=" expectedValue="SSMAPC1" expression="'SSMAPC1' eq result.arg1.dfhc0070.dfhc0070" name="dfhc0070" result="Success"/><result:results expectedAssert="=" expectedValue="x'000040'" expression="&quot;x'000040'&quot; eq result.arg2.SSMAPC1O.FILLER1" name="FILLER1" result="Success"/><result:results expectedAssert="=" expectedValue="0000000000" expression="'0000000000' eq result.arg2.SSMAPC1O.ENT1CNOO" name="ENT1CNOO" result="Success"/><result:results expectedAssert="=" expectedValue="x'000040'" expression="&quot;x'000040'&quot; eq result.arg2.SSMAPC1O.FILLER2" name="FILLER2" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.SSMAPC1O.ENT1FNAO" name="ENT1FNAO" result="Success"/><result:results expectedAssert="=" expectedValue="x'000040'" expression="&quot;x'000040'&quot; eq result.arg2.SSMAPC1O.FILLER3" name="FILLER3" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.SSMAPC1O.ENT1LNAO" name="ENT1LNAO" result="Success"/><result:results expectedAssert="=" expectedValue="x'000040'" expression="&quot;x'000040'&quot; eq result.arg2.SSMAPC1O.FILLER4" name="FILLER4" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.SSMAPC1O.ENT1DOBO" name="ENT1DOBO" result="Success"/><result:results expectedAssert="=" expectedValue="x'000040'" expression="&quot;x'000040'&quot; eq result.arg2.SSMAPC1O.FILLER5" name="FILLER5" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.SSMAPC1O.ENT1HNMO" name="ENT1HNMO" result="Success"/><result:results expectedAssert="=" expectedValue="x'000040'" expression="&quot;x'000040'&quot; eq result.arg2.SSMAPC1O.FILLER6" name="FILLER6" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.SSMAPC1O.ENT1HNOO" name="ENT1HNOO" result="Success"/><result:results expectedAssert="=" expectedValue="x'000040'" expression="&quot;x'000040'&quot; eq result.arg2.SSMAPC1O.FILLER7" name="FILLER7" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.SSMAPC1O.ENT1HPCO" name="ENT1HPCO" result="Success"/><result:results expectedAssert="=" expectedValue="x'000040'" expression="&quot;x'000040'&quot; eq result.arg2.SSMAPC1O.FILLER8" name="FILLER8" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.SSMAPC1O.ENT1OPTO" name="ENT1OPTO" result="Success"/><result:results expectedAssert="=" expectedValue="x'000040'" expression="&quot;x'000040'&quot; eq result.arg2.SSMAPC1O.FILLER9" name="FILLER9" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.SSMAPC1O.ERRFLDO" name="ERRFLDO" result="Success"/><result:results expectedAssert="=" expectedValue="SSMAP" expression="'SSMAP' eq result.arg4.dfhc0071.dfhc0071" name="dfhc0071" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="2" stubdata="platform:/resource/LGTESTC1_Dev_Unit_Tests/Unit%20Test/Output/Last%20Execution/LGTESTC1_Scenario1.archive#Unit%20Test/Stubs/LGTESTC1_BMS_SEND_RECEIVE_01.stub.Unit%20Test/Stubs/LGTESTC1_BMS_SEND_RECEIVE_01.stub.1"><result:results expectedAssert="=" expectedValue="SSMAPC1" expression="'SSMAPC1' eq result.arg1.dfhc0070.dfhc0070" name="dfhc0070" result="Success"/><result:results expectedAssert="=" expectedValue="SSMAP" expression="'SSMAP' eq result.arg4.dfhc0071.dfhc0071" name="dfhc0071" result="Success"/></result:stubdataassertions><result:stubdataassertions errorCount="0" failureCount="0" testCount="21" stubdata="platform:/resource/LGTESTC1_Dev_Unit_Tests/Unit%20Test/Output/Last%20Execution/LGTESTC1_Scenario1.archive#Unit%20Test/Stubs/LGTESTC1_BMS_SEND_RECEIVE_01.stub.Unit%20Test/Stubs/LGTESTC1_BMS_SEND_RECEIVE_01.stub.2"><result:results expectedAssert="=" expectedValue="SSMAPC1" expression="'SSMAPC1' eq result.arg1.dfhc0070.dfhc0070" name="dfhc0070" result="Success"/><result:results expectedAssert="=" expectedValue="x'00000000000000000096E9E7'" expression="&quot;x'00000000000000000096E9E7'&quot; eq result.arg2.SSMAPC1O.FILLER0" name="FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="x'000000'" expression="&quot;x'000000'&quot; eq result.arg2.SSMAPC1O.FILLER1" name="FILLER1" result="Success"/><result:results expectedAssert="=" expectedValue="x'00000000000000000000'" expression="&quot;x'00000000000000000000'&quot; eq result.arg2.SSMAPC1O.ENT1CNOO" name="ENT1CNOO" result="Success"/><result:results expectedAssert="=" expectedValue="x'000000'" expression="&quot;x'000000'&quot; eq result.arg2.SSMAPC1O.FILLER2" name="FILLER2" result="Success"/><result:results expectedAssert="=" expectedValue="x'00000000000000000000'" expression="&quot;x'00000000000000000000'&quot; eq result.arg2.SSMAPC1O.ENT1FNAO" name="ENT1FNAO" result="Success"/><result:results expectedAssert="=" expectedValue="x'000000'" expression="&quot;x'000000'&quot; eq result.arg2.SSMAPC1O.FILLER3" name="FILLER3" result="Success"/><result:results expectedAssert="=" expectedValue="x'0000000000000000000000000000000000000000'" expression="&quot;x'0000000000000000000000000000000000000000'&quot; eq result.arg2.SSMAPC1O.ENT1LNAO" name="ENT1LNAO" result="Success"/><result:results expectedAssert="=" expectedValue="x'000000'" expression="&quot;x'000000'&quot; eq result.arg2.SSMAPC1O.FILLER4" name="FILLER4" result="Success"/><result:results expectedAssert="=" expectedValue="x'00000000000000000000'" expression="&quot;x'00000000000000000000'&quot; eq result.arg2.SSMAPC1O.ENT1DOBO" name="ENT1DOBO" result="Success"/><result:results expectedAssert="=" expectedValue="x'000000'" expression="&quot;x'000000'&quot; eq result.arg2.SSMAPC1O.FILLER5" name="FILLER5" result="Success"/><result:results expectedAssert="=" expectedValue="x'0000000000000000000000000000000000000000'" expression="&quot;x'0000000000000000000000000000000000000000'&quot; eq result.arg2.SSMAPC1O.ENT1HNMO" name="ENT1HNMO" result="Success"/><result:results expectedAssert="=" expectedValue="x'000000'" expression="&quot;x'000000'&quot; eq result.arg2.SSMAPC1O.FILLER6" name="FILLER6" result="Success"/><result:results expectedAssert="=" expectedValue="x'00000000'" expression="&quot;x'00000000'&quot; eq result.arg2.SSMAPC1O.ENT1HNOO" name="ENT1HNOO" result="Success"/><result:results expectedAssert="=" expectedValue="x'000000'" expression="&quot;x'000000'&quot; eq result.arg2.SSMAPC1O.FILLER7" name="FILLER7" result="Success"/><result:results expectedAssert="=" expectedValue="x'0000000000000000'" expression="&quot;x'0000000000000000'&quot; eq result.arg2.SSMAPC1O.ENT1HPCO" name="ENT1HPCO" result="Success"/><result:results expectedAssert="=" expectedValue="x'000100'" expression="&quot;x'000100'&quot; eq result.arg2.SSMAPC1O.FILLER8" name="FILLER8" result="Success"/><result:results expectedAssert="=" expectedValue="1" expression="'1' eq result.arg2.SSMAPC1O.ENT1OPTO" name="ENT1OPTO" result="Success"/><result:results expectedAssert="=" expectedValue="x'000000'" expression="&quot;x'000000'&quot; eq result.arg2.SSMAPC1O.FILLER9" name="FILLER9" result="Success"/><result:results expectedAssert="=" expectedValue="No data was returned." expression="'No data was returned.' eq result.arg2.SSMAPC1O.ERRFLDO" name="ERRFLDO" result="Success"/><result:results expectedAssert="=" expectedValue="SSMAP" expression="'SSMAP' eq result.arg4.dfhc0071.dfhc0071" name="dfhc0071" result="Success"/></result:stubdataassertions></result:stubAssertion><result:stubAssertion errorCount="0" failureCount="0" testCount="1" stub="platform:/resource/LGTESTC1_Dev_Unit_Tests/Unit%20Test/Output/Last%20Execution/LGTESTC1_Scenario1.archive#Unit%20Test/Stubs/LGTESTC1_HANDLE_01.stub"><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/LGTESTC1_Dev_Unit_Tests/Unit%20Test/Output/Last%20Execution/LGTESTC1_Scenario1.archive#Unit%20Test/Stubs/LGTESTC1_HANDLE_01.stub.0"/></result:stubAssertion><result:stubAssertion errorCount="0" failureCount="0" testCount="1" stub="platform:/resource/LGTESTC1_Dev_Unit_Tests/Unit%20Test/Output/Last%20Execution/LGTESTC1_Scenario1.archive#Unit%20Test/Stubs/LGTESTC1_SEND_RECEIVE_01.stub"><result:stubdataassertions errorCount="0" failureCount="0" testCount="1" stubdata="platform:/resource/LGTESTC1_Dev_Unit_Tests/Unit%20Test/Output/Last%20Execution/LGTESTC1_Scenario1.archive#Unit%20Test/Stubs/LGTESTC1_SEND_RECEIVE_01.stub.0"/></result:stubAssertion><result:stubAssertion errorCount="0" failureCount="0" testCount="56" stub="platform:/resource/LGTESTC1_Dev_Unit_Tests/Unit%20Test/Output/Last%20Execution/LGTESTC1_Scenario1.archive#Unit%20Test/Stubs/LGTESTC1_SUBP_LGICUS01_01.stub"><result:stubdataassertions errorCount="0" failureCount="0" testCount="56" stubdata="platform:/resource/LGTESTC1_Dev_Unit_Tests/Unit%20Test/Output/Last%20Execution/LGTESTC1_Scenario1.archive#Unit%20Test/Stubs/LGTESTC1_SUBP_LGICUS01_01.stub.Unit%20Test/Stubs/LGTESTC1_SUBP_LGICUS01_01.stub.0"><result:results expectedAssert="=" expectedValue="LGICUS01" expression="'LGICUS01' eq result.arg1.dfhc0080.dfhc0080" name="dfhc0080" result="Success"/><result:results expectedAssert="=" expectedValue="01ICUS" expression="'01ICUS' eq result.arg2.COMM_AREA.CA_REQUEST_ID" name="CA_REQUEST_ID" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(result.arg2.COMM_AREA.CA_RETURN_CODE) eq 0" name="CA_RETURN_CODE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_REQUEST_SPECIFIC" name="CA_REQUEST_SPECIFIC" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_CUSTOMER_REQUEST.CA_FIRST_NAME" name="CA_FIRST_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_CUSTOMER_REQUEST.CA_LAST_NAME" name="CA_LAST_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_CUSTOMER_REQUEST.CA_DOB" name="CA_DOB" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_CUSTOMER_REQUEST.CA_HOUSE_NAME" name="CA_HOUSE_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_CUSTOMER_REQUEST.CA_HOUSE_NUM" name="CA_HOUSE_NUM" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_CUSTOMER_REQUEST.CA_POSTCODE" name="CA_POSTCODE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_CUSTOMER_REQUEST.CA_POLICY_DATA" name="CA_POLICY_DATA" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_POLICY_COMMON.CA_ISSUE_DATE" name="CA_ISSUE_DATE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_POLICY_COMMON.CA_EXPIRY_DATE" name="CA_EXPIRY_DATE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_POLICY_COMMON.CA_LASTCHANGED" name="CA_LASTCHANGED" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_POLICY_COMMON.CA_BROKERSREF" name="CA_BROKERSREF" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_POLICY_SPECIFIC" name="CA_POLICY_SPECIFIC" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_ENDOWMENT.CA_E_WITH_PROFITS" name="CA_E_WITH_PROFITS" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_ENDOWMENT.CA_E_EQUITIES" name="CA_E_EQUITIES" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_ENDOWMENT.CA_E_MANAGED_FUND" name="CA_E_MANAGED_FUND" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_ENDOWMENT.CA_E_FUND_NAME" name="CA_E_FUND_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_ENDOWMENT.CA_E_LIFE_ASSURED" name="CA_E_LIFE_ASSURED" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_ENDOWMENT.CA_E_PADDING_DATA" name="CA_E_PADDING_DATA" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_HOUSE.CA_H_PROPERTY_TYPE" name="CA_H_PROPERTY_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_HOUSE.CA_H_HOUSE_NAME" name="CA_H_HOUSE_NAME" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_HOUSE.CA_H_HOUSE_NUMBER" name="CA_H_HOUSE_NUMBER" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_HOUSE.CA_H_POSTCODE" name="CA_H_POSTCODE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_HOUSE.CA_H_FILLER" name="CA_H_FILLER" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_MOTOR.CA_M_MAKE" name="CA_M_MAKE" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_MOTOR.CA_M_MODEL" name="CA_M_MODEL" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_MOTOR.CA_M_REGNUMBER" name="CA_M_REGNUMBER" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_MOTOR.CA_M_COLOUR" name="CA_M_COLOUR" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_MOTOR.CA_M_MANUFACTURED" name="CA_M_MANUFACTURED" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_MOTOR.CA_M_FILLER" name="CA_M_FILLER" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_COMMERCIAL.CA_B_Address" name="CA_B_Address" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_COMMERCIAL.CA_B_Postcode" name="CA_B_Postcode" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_COMMERCIAL.CA_B_Latitude" name="CA_B_Latitude" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_COMMERCIAL.CA_B_Longitude" name="CA_B_Longitude" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_COMMERCIAL.CA_B_Customer" name="CA_B_Customer" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_COMMERCIAL.CA_B_PropType" name="CA_B_PropType" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_COMMERCIAL.CA_B_RejectReason" name="CA_B_RejectReason" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_COMMERCIAL.CA_B_FILLER" name="CA_B_FILLER" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_Date" name="CA_C_Date" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_Cause" name="CA_C_Cause" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_Observations" name="CA_C_Observations" result="Success"/><result:results expectedAssert="=" expectedValue="" expression="'' eq result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_FILLER.SQL_TEMP" name="SQL_TEMP" result="Success"/><result:results expectedAssert="=" expectedValue="1077952576" expression="BigDecimalCreator.make('1077952576').compareTo(result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_FILLER.DSN_TEMP) eq 0" name="DSN_TEMP" result="Success"/><result:results expectedAssert="=" expectedValue="1077952576" expression="BigDecimalCreator.make('1077952576').compareTo(result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_FILLER.DSNNROWS) eq 0" name="DSNNROWS" result="Success"/><result:results expectedAssert="=" expectedValue="16448" expression="BigDecimalCreator.make('16448').compareTo(result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_FILLER.DSNNTYPE) eq 0" name="DSNNTYPE" result="Success"/><result:results expectedAssert="=" expectedValue="16448" expression="BigDecimalCreator.make('16448').compareTo(result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_FILLER.DSNNLEN) eq 0" name="DSNNLEN" result="Success"/><result:results expectedAssert="=" expectedValue="1077952576" expression="BigDecimalCreator.make('1077952576').compareTo(result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_FILLER.SQL_NULL) eq 0" name="SQL_NULL" result="Success"/><result:results expectedAssert="=" expectedValue="16448" expression="BigDecimalCreator.make('16448').compareTo(result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_FILLER.SQL_INIT_FLAG) eq 0" name="SQL_INIT_FLAG" result="Success"/><result:results expectedAssert="=" expectedValue="1077952576" expression="BigDecimalCreator.make('1077952576').compareTo(result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_FILLER.SQL_FILE_READ) eq 0" name="SQL_FILE_READ" result="Success"/><result:results expectedAssert="=" expectedValue="1077952576" expression="BigDecimalCreator.make('1077952576').compareTo(result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_FILLER.SQL_FILE_CREATE) eq 0" name="SQL_FILE_CREATE" result="Success"/><result:results expectedAssert="=" expectedValue="1077952576" expression="BigDecimalCreator.make('1077952576').compareTo(result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_FILLER.SQL_FILE_OVERWRITE) eq 0" name="SQL_FILE_OVERWRITE" result="Success"/><result:results expectedAssert="=" expectedValue="1077952576" expression="BigDecimalCreator.make('1077952576').compareTo(result.arg2.COMM_AREA.CA_POLICY_REQUEST.CA_CLAIM.CA_C_FILLER.SQL_FILE_APPEND) eq 0" name="SQL_FILE_APPEND" result="Success"/><result:results expectedAssert="=" expectedValue="2500" expression="BigDecimalCreator.make('2500').compareTo(result.arg3.dfhb0020.dfhb0020) eq 0" name="dfhb0020" result="Success"/></result:stubdataassertions></result:stubAssertion></result:testcases></result:testscenarios></result:testsuite></result:result>